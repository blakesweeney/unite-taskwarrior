# Unite-taskwarrior

A unite.vim interface to task warrior.

This is meant to be a simple interface to [taskwarrior], that works faster than
[vim-taskwarrior](https://github.com/farseer90718/vim-taskwarrior). Plus I like
Unite's interface also I may suffer from a severe case of NIH syndrome.

This code was based off of
[unite-todo](https://github.com/kannokanno/unite-todo). That tool provides a
pretty good simple task system for inside vim. I used it for a bit but also
needed something for use outside vim. [taskwarrior] does that, but I prefer a
simpler interface much of the time.

## Requirements

* [unite](https://github.com/Shougo/unite.vim)
* [vimproc](https://github.com/Shougo/vimproc.vim)
* [taskwarrior]
    Taskwarrior should be configured to not prompt for stuff. I use:

    ```
    echo.command=yes
    verbose=no
    confirmation=no
    ```

    I've only tested this with version 2.4.0.

## Installing

Use a plugin manager. I like
[NeoBundle](https://github.com/Shougo/neobundle.vim), Other options are:
[Vim-Plug](https://github.com/junegunn/vim-plug),
[Vim-Pathogen](https://github.com/tpope/vim-pathogen),
[Vundle](https://github.com/gmarik/Vundle.vim).

For NeoBundle add:

```vim
NeoBundle 'blakesweeney/unite-taskwarrior'
```

to your vimrc.

## Screenshots

Add some.

## Usage

This is a general overview of the functionality here, for details about this
see the docs in doc/unite-taskwarrior.txt.

This doesn't come with any key bindings added by default, you should add your
own as needed. My configuration is:

```vim
" vimrc
NeoBundle 'blakesweeney/unite-taskwarrior'
call unite#custom#source('taskwarrior', 'matchers', 'matcher_fuzzy')
call unite#custom#source('taskwarrior', 'sorters', 'sorter_rank')

nnoremap <silent>  <Leader>T  :Unite taskwarrior -winheight=50<CR>
nnoremap           <Leader>Ta :UniteTaskWarriorAdd<CR>
vnoremap <silent>  <Leader>Ta :B UniteTaskWarriorAdd<CR>

" ftplugin/unite.vim
inoremap <silent><buffer><expr> <C-t> unite#do_action('edit_tag')
nnoremap <silent><buffer><expr> <C-t> unite#do_action('edit_tag')
```

The `:B` is from
[vis.vim](http://vim.sourceforge.net/scripts/script.php?script_id=1195) which
makes visual commands apply only the selected text, not the whole line. I highly
recommend it as well. In `ftplugin/unite.vim` I use:

```vim
nnoremap <C-t> :call unite#do_action('edit_tag')
```

### Commands:

```vim
:Unite taskwarrior                 " Show all tasks not marked as deleted
:Unite taskwarrior:$proj           " Show all tasks for the given project
:Unite taskwarrior:@tag            " Show all tasks with the given tag
:Unite taskwarrior:@tag:@other-tag " Show all tasks with tag and other-tag
:Unite taskwarrior/tags            " Show a tag listing
:Unite taskwarrior/projects        " Show a project listing
:UniteTaskwarriorAdd               " Add a task
```

### Project list actions

* `open`
    Show all tasks for the given project

    This can be run on several projects.

### Tag list actions

* `open`
    Show all tasks with the given tag.

    This can be run on several tags.

### Task list actions

* `do`
    Complete this task.

    Can be used on several selected tasks.

* `delete`
    Delete the the task

    Can be used on several selected tasks.

    By default is called by `d`.

* `edit`
    Will edit the description of task.

    By default is called by `e`.

* `edit_tags`
    Will edit the tags.

    Can be used on several tasks.

* `edit_proj`
    Edit the project of the current task

    Can be used on several tasks.

* `open`
    Will open a notes file for the task.

    By default is called by `o`.

* `preview`
    Will preview the notes file.

    By default is called by `p`.

* `search`
    Search all tasks.

    TODO: Implement me

* `similar`
    Show all similar tasks.

    TODO: Implement me

* `toggle`
    Will toggle the task status. This is the default action. By default is called by
    `<CR>`. This will toggle between `pending` and `completed`.

    Can be used on several selected tasks.

* `view`
    Provide a detailed view of the task.

## Notes files

This provides some simple tasknote functionality. In the list of tasks you can
open a file for a task using 'o' by default. This will be created with the
description of the task.  You can modify and save this file and re open it
later.

# Running tests

First install the required packages with [vim-flavor](kana/vim-flavor). You
should only need to do `run install` to install everything needed. 
Then compile vimproc with:

```sh
$ cd .vim-flavor/deps/Shougo_vimproc.vim/
$ make -f make_mac.mak # If you have a mac
# If you don't have mac you'll have to choose the correct make file.
```

If `run install` doesn't install everything then install vim-flavor with bundler
and use vim-flavor to install vim-vspec.

You can then run tests by doing `./run test`. The script makes sure we use the
correct task configuration and data directory.

[taskwarrior]: http://taskwarrior.org/
